{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eleventh/components/auth/auth-form.js\";\nimport { useState, useRef } from \"react\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\nimport classes from \"./auth-form.module.css\";\n\nasync function createUser(email, password) {\n  const response = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Something went wrong!\");\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword\n      });\n      console.log(result);\n\n      if (!result.error) {\n        // set some auth state\n        router.replace(\"/profile\");\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eleventh/components/auth/auth-form.js"],"names":["useState","useRef","signIn","useRouter","classes","createUser","email","password","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","router","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","result","redirect","console","log","error","replace","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from \"react\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\nimport classes from \"./auth-form.module.css\";\n\nasync function createUser(email, password) {\n\tconst response = await fetch(\"/api/auth/signup\", {\n\t\tmethod: \"POST\",\n\t\tbody: JSON.stringify({ email, password }),\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t}\n\t});\n\n\tconst data = await response.json();\n\n\tif (!response.ok) {\n\t\tthrow new Error(data.message || \"Something went wrong!\");\n\t}\n\n\treturn data;\n}\n\nfunction AuthForm() {\n\tconst emailInputRef = useRef();\n\tconst passwordInputRef = useRef();\n\n\tconst [isLogin, setIsLogin] = useState(true);\n\tconst router = useRouter();\n\n\tfunction switchAuthModeHandler() {\n\t\tsetIsLogin((prevState) => !prevState);\n\t}\n\n\tasync function submitHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredEmail = emailInputRef.current.value;\n\t\tconst enteredPassword = passwordInputRef.current.value;\n\n\t\t// optional: Add validation\n\n\t\tif (isLogin) {\n\t\t\tconst result = await signIn(\"credentials\", {\n\t\t\t\tredirect: false,\n\t\t\t\temail: enteredEmail,\n\t\t\t\tpassword: enteredPassword\n\t\t\t});\n\t\t\tconsole.log(result);\n\t\t\tif (!result.error) {\n\t\t\t\t// set some auth state\n\t\t\t\trouter.replace(\"/profile\");\n\t\t\t}\n\t\t} \n\t\telse {\n\t\t\ttry {\n\t\t\t\tconst result = await createUser(enteredEmail, enteredPassword);\n\t\t\t\tconsole.log(result);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<section className={classes.auth}>\n\t\t\t<h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"email\">Your Email</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tref={emailInputRef}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"password\">Your Password</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t\tref={passwordInputRef}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.actions}>\n\t\t\t\t\t<button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tclassName={classes.toggle}\n\t\t\t\t\t\tonClick={switchAuthModeHandler}>\n\t\t\t\t\t\t{isLogin\n\t\t\t\t\t\t\t? \"Create new account\"\n\t\t\t\t\t\t\t: \"Login with existing account\"}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</section>\n\t);\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}