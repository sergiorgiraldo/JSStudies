{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eleventh/components/auth/auth-form.js\";\nimport { useState, useRef } from 'react';\nimport { signIn } from 'next-auth/client';\nimport { useRouter } from 'next/router';\nimport classes from './auth-form.module.css';\n\nasync function createUser(email, password) {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong!');\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value; // optional: Add validation\n\n    if (isLogin) {\n      const result = await signIn('credentials', {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword\n      });\n\n      if (!result.error) {\n        // set some auth state\n        router.replace('/profile');\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? 'Login' : 'Sign Up'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? 'Login' : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? 'Create new account' : 'Login with existing account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eleventh/components/auth/auth-form.js"],"names":["useState","useRef","signIn","useRouter","classes","createUser","email","password","response","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","AuthForm","emailInputRef","passwordInputRef","isLogin","setIsLogin","router","switchAuthModeHandler","prevState","submitHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","result","redirect","error","replace","console","log","auth","control","actions","toggle"],"mappings":"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","sourcesContent":["import { useState, useRef } from 'react';\nimport { signIn } from 'next-auth/client';\nimport { useRouter } from 'next/router';\n\nimport classes from './auth-form.module.css';\n\nasync function createUser(email, password) {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    body: JSON.stringify({ email, password }),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Something went wrong!');\n  }\n\n  return data;\n}\n\nfunction AuthForm() {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  async function submitHandler(event) {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    if (isLogin) {\n      const result = await signIn('credentials', {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword,\n      });\n\n      if (!result.error) {\n        // set some auth state\n        router.replace('/profile');\n      }\n    } else {\n      try {\n        const result = await createUser(enteredEmail, enteredPassword);\n        console.log(result);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? 'Login' : 'Sign Up'}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor='email'>Your Email</label>\n          <input type='email' id='email' required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='password'>Your Password</label>\n          <input\n            type='password'\n            id='password'\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? 'Login' : 'Create Account'}</button>\n          <button\n            type='button'\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? 'Create new account' : 'Login with existing account'}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}