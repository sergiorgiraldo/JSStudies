{"ast":null,"code":"import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\nimport { verifyPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\nexport default NextAuth({\n  session: {\n    jwt: true\n  },\n  providers: [Providers.Credentials({\n    async authorize(credentials) {\n      const client = await connectToDatabase();\n      const usersCollection = client.db().collection(\"users\");\n      const user = await usersCollection.findOne({\n        email: credentials.email\n      });\n\n      if (!user) {\n        client.close();\n        throw new Error(\"No user found!\");\n      }\n\n      const isValid = await verifyPassword(credentials.password, user.password);\n\n      if (!isValid) {\n        client.close();\n        throw new Error(\"Could not log you in!\");\n      }\n\n      client.close();\n      return {\n        email: user.email\n      };\n    }\n\n  })]\n});","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eleventh/pages/api/auth/[...nextauth].js"],"names":["NextAuth","Providers","verifyPassword","connectToDatabase","session","jwt","providers","Credentials","authorize","credentials","client","usersCollection","db","collection","user","findOne","email","close","Error","isValid","password"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AAEA,eAAeH,QAAQ,CAAC;AACvBI,EAAAA,OAAO,EAAE;AACRC,IAAAA,GAAG,EAAE;AADG,GADc;AAIvBC,EAAAA,SAAS,EAAE,CACVL,SAAS,CAACM,WAAV,CAAsB;AACrB,UAAMC,SAAN,CAAgBC,WAAhB,EAA6B;AAC5B,YAAMC,MAAM,GAAG,MAAMP,iBAAiB,EAAtC;AAEA,YAAMQ,eAAe,GAAGD,MAAM,CAACE,EAAP,GAAYC,UAAZ,CAAuB,OAAvB,CAAxB;AAEA,YAAMC,IAAI,GAAG,MAAMH,eAAe,CAACI,OAAhB,CAAwB;AAC1CC,QAAAA,KAAK,EAAEP,WAAW,CAACO;AADuB,OAAxB,CAAnB;;AAIA,UAAI,CAACF,IAAL,EAAW;AACVJ,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,gBAAV,CAAN;AACA;;AAED,YAAMC,OAAO,GAAG,MAAMjB,cAAc,CACnCO,WAAW,CAACW,QADuB,EAEnCN,IAAI,CAACM,QAF8B,CAApC;;AAKA,UAAI,CAACD,OAAL,EAAc;AACbT,QAAAA,MAAM,CAACO,KAAP;AACA,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACA;;AAEDR,MAAAA,MAAM,CAACO,KAAP;AACA,aAAO;AAAED,QAAAA,KAAK,EAAEF,IAAI,CAACE;AAAd,OAAP;AACA;;AA3BoB,GAAtB,CADU;AAJY,CAAD,CAAvB","sourcesContent":["import NextAuth from \"next-auth\";\nimport Providers from \"next-auth/providers\";\n\nimport { verifyPassword } from \"../../../lib/auth\";\nimport { connectToDatabase } from \"../../../lib/db\";\n\nexport default NextAuth({\n\tsession: {\n\t\tjwt: true\n\t},\n\tproviders: [\n\t\tProviders.Credentials({\n\t\t\tasync authorize(credentials) {\n\t\t\t\tconst client = await connectToDatabase();\n\n\t\t\t\tconst usersCollection = client.db().collection(\"users\");\n\n\t\t\t\tconst user = await usersCollection.findOne({\n\t\t\t\t\temail: credentials.email\n\t\t\t\t});\n\n\t\t\t\tif (!user) {\n\t\t\t\t\tclient.close();\n\t\t\t\t\tthrow new Error(\"No user found!\");\n\t\t\t\t}\n\n\t\t\t\tconst isValid = await verifyPassword(\n\t\t\t\t\tcredentials.password,\n\t\t\t\t\tuser.password\n\t\t\t\t);\n\n\t\t\t\tif (!isValid) {\n\t\t\t\t\tclient.close();\n\t\t\t\t\tthrow new Error(\"Could not log you in!\");\n\t\t\t\t}\n\n\t\t\t\tclient.close();\n\t\t\t\treturn { email: user.email };\n\t\t\t}\n\t\t})\n\t]\n});\n"]},"metadata":{},"sourceType":"module"}