{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eighth/components/input/comments.js\";\nimport { useState } from \"react\";\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\n\nfunction Comments(props) {\n  const {\n    eventId\n  } = props;\n  const {\n    0: showComments,\n    1: setShowComments\n  } = useState(false);\n\n  function toggleCommentsHandler() {\n    setShowComments(prevStatus => !prevStatus);\n  }\n\n  function addCommentHandler(commentData) {\n    const reqBody = {\n      name: enteredName,\n      email: enteredEmail,\n      comment: enteredEmail\n    };\n    fetch(`/api/comments/${eventId}`, {\n      method: \"POST\",\n      body: JSON.stringify(reqBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n      setCommentOK(true);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? \"Hide\" : \"Show\", \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      eventId: eventId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n\nexport default Comments;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth/components/input/comments.js"],"names":["useState","CommentList","NewComment","classes","Comments","props","eventId","showComments","setShowComments","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","reqBody","name","enteredName","email","enteredEmail","comment","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","setCommentOK","comments"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM;AAAA,OAACE,YAAD;AAAA,OAAeC;AAAf,MAAkCR,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASS,qBAAT,GAAiC;AAChCD,IAAAA,eAAe,CAAEE,UAAD,IAAgB,CAACA,UAAlB,CAAf;AACA;;AAED,WAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AACvC,UAAMC,OAAO,GAAG;AAAEC,MAAAA,IAAI,EAAEC,WAAR;AAAqBC,MAAAA,KAAK,EAAEC,YAA5B;AAA0CC,MAAAA,OAAO,EAACD;AAAlD,KAAhB;AAEAE,IAAAA,KAAK,CAAE,iBAAgBb,OAAQ,EAA1B,EAA6B;AACjCc,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,OAAf,CAF2B;AAGjCW,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAHwB,KAA7B,CAAL,CAOEC,IAPF,CAOQC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPrB,EAQEF,IARF,CAQQG,IAAD,IAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,KAXF;AAWM;;AAEP,sBACC;AAAS,IAAA,SAAS,EAAE5B,OAAO,CAAC6B,QAA5B;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEvB,qBAAjB;AAAA,iBACEF,YAAY,GAAG,MAAH,GAAY,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAIEA,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEI;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJlB,EAKEJ,YAAY,iBAAI,QAAC,WAAD;AAAa,MAAA,OAAO,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;AAED,eAAeF,QAAf","sourcesContent":["import { useState } from \"react\";\n\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\n\nfunction Comments(props) {\n\tconst { eventId } = props;\n\n\tconst [showComments, setShowComments] = useState(false);\n\n\tfunction toggleCommentsHandler() {\n\t\tsetShowComments((prevStatus) => !prevStatus);\n\t}\n\n\tfunction addCommentHandler(commentData) {\n\t\tconst reqBody = { name: enteredName, email: enteredEmail, comment:enteredEmail };\n\n\t\tfetch(`/api/comments/${eventId}`, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(reqBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetCommentOK(true);\n\t\t\t});\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<button onClick={toggleCommentsHandler}>\n\t\t\t\t{showComments ? \"Hide\" : \"Show\"} Comments\n\t\t\t</button>\n\t\t\t{showComments && <NewComment onAddComment={addCommentHandler} />}\n\t\t\t{showComments && <CommentList eventId={eventId}/>}\n\t\t</section>\n\t);\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}