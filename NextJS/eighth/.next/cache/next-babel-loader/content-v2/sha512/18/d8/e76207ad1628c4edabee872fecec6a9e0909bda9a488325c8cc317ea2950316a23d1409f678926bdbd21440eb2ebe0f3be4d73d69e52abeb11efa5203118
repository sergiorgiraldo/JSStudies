{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eighth/components/input/new-comment.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport classes from \"./new-comment.module.css\";\n\nfunction NewComment(props) {\n  _s();\n\n  var _useState = useState(false),\n      isInvalid = _useState[0],\n      setIsInvalid = _useState[1];\n\n  var emailInputRef = useRef();\n  var nameInputRef = useRef();\n  var commentInputRef = useRef();\n\n  function sendCommentHandler(event) {\n    event.preventDefault();\n    var enteredEmail = emailInputRef.current.value;\n    var enteredName = nameInputRef.current.value;\n    var enteredComment = commentInputRef.current.value;\n\n    if (!enteredEmail || enteredEmail.trim() === \"\" || !enteredEmail.includes(\"@\") || !enteredName || enteredName.trim() === \"\" || !enteredComment || enteredComment.trim() === \"\") {\n      setIsInvalid(true);\n      return;\n    }\n\n    props.onAddComment({\n      email: enteredEmail,\n      name: enteredName,\n      text: enteredComment\n    });\n    var reqBody = {\n      name: enteredName,\n      email: enteredEmail,\n      comment: en\n    };\n    fetch(\"/api/newsletter\", {\n      method: \"POST\",\n      body: JSON.stringify(reqBody),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n      setSignedUp(true);\n    });\n    document.getElementById(\"email\").value = \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: sendCommentHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          ref: emailInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"comment\",\n        children: \"Your comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"comment\",\n        rows: \"5\",\n        ref: commentInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid email address and comment!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n}\n\n_s(NewComment, \"shnA/fndA2fZM1qYDvr//SN1INg=\");\n\n_c = NewComment;\nexport default NewComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewComment\");","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth/components/input/new-comment.js"],"names":["useRef","useState","classes","NewComment","props","isInvalid","setIsInvalid","emailInputRef","nameInputRef","commentInputRef","sendCommentHandler","event","preventDefault","enteredEmail","current","value","enteredName","enteredComment","trim","includes","onAddComment","email","name","text","reqBody","comment","en","fetch","method","body","JSON","stringify","headers","then","response","json","data","console","log","setSignedUp","document","getElementById","form","row","control"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./new-comment.module.css\";\n\nfunction NewComment(props) {\n\tconst [isInvalid, setIsInvalid] = useState(false);\n\n\tconst emailInputRef = useRef();\n\tconst nameInputRef = useRef();\n\tconst commentInputRef = useRef();\n\n\tfunction sendCommentHandler(event) {\n\t\tevent.preventDefault();\n\n\t\tconst enteredEmail = emailInputRef.current.value;\n\t\tconst enteredName = nameInputRef.current.value;\n\t\tconst enteredComment = commentInputRef.current.value;\n\n\t\tif (\n\t\t\t!enteredEmail ||\n\t\t\tenteredEmail.trim() === \"\" ||\n\t\t\t!enteredEmail.includes(\"@\") ||\n\t\t\t!enteredName ||\n\t\t\tenteredName.trim() === \"\" ||\n\t\t\t!enteredComment ||\n\t\t\tenteredComment.trim() === \"\"\n\t\t) {\n\t\t\tsetIsInvalid(true);\n\t\t\treturn;\n\t\t}\n\n\t\tprops.onAddComment({\n\t\t\temail: enteredEmail,\n\t\t\tname: enteredName,\n\t\t\ttext: enteredComment,\n\t\t});\n\n\t\tconst reqBody = { name: enteredName, email: enteredEmail, comment:en };\n\n\t\tfetch(\"/api/newsletter\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(reqBody),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t})\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tsetSignedUp(true);\n\t\t\t});\n\n\t\tdocument.getElementById(\"email\").value = \"\";\n\t}\n\n\treturn (\n\t\t<form className={classes.form} onSubmit={sendCommentHandler}>\n\t\t\t<div className={classes.row}>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"email\">Your email</label>\n\t\t\t\t\t<input type=\"email\" id=\"email\" ref={emailInputRef} />\n\t\t\t\t</div>\n\t\t\t\t<div className={classes.control}>\n\t\t\t\t\t<label htmlFor=\"name\">Your name</label>\n\t\t\t\t\t<input type=\"text\" id=\"name\" ref={nameInputRef} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={classes.control}>\n\t\t\t\t<label htmlFor=\"comment\">Your comment</label>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"comment\"\n\t\t\t\t\trows=\"5\"\n\t\t\t\t\tref={commentInputRef}\n\t\t\t\t></textarea>\n\t\t\t</div>\n\t\t\t{isInvalid && (\n\t\t\t\t<p>Please enter a valid email address and comment!</p>\n\t\t\t)}\n\t\t\t<button>Submit</button>\n\t\t</form>\n\t);\n}\n\nexport default NewComment;\n"]},"metadata":{},"sourceType":"module"}