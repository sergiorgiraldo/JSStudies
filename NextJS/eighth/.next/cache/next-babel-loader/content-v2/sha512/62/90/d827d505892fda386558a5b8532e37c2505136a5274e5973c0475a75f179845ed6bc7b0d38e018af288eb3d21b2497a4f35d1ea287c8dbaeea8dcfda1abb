{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/GK47LX/source/JSStudies/NextJS/eighth/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eighth/components/input/comment-list.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport classes from \"./comment-list.module.css\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport useSWR from \"swr\";\n\nfunction CommentList(props) {\n  _s();\n\n  var _this = this;\n\n  var eventId = props.eventId;\n\n  var _useSWR = useSWR(\"/api/comments/\".concat(eventId)),\n      data = _useSWR.data;\n\n  var _useState = useState(),\n      comments = _useState[0],\n      setComments = _useState[1];\n\n  useEffect(function () {\n    if (data) {\n      var _comments = [];\n\n      for (var key in data) {\n        _comments.push(_objectSpread({\n          id: key\n        }, data[key]));\n      }\n\n      setComments(_comments);\n    }\n  }, [data]);\n\n  if (!comments) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes.comments,\n    children: comments.map(function (c) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Name:: \", c.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }, _this), \"Email:: \", c.email, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 24\n        }, _this), \"Comment:: \", c.comment]\n      }, c.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CommentList, \"RPDEWWODofuLVuilUlFqWG3a2NU=\", false, function () {\n  return [useSWR];\n});\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth/components/input/comment-list.js"],"names":["classes","useState","useEffect","Fragment","useSWR","CommentList","props","eventId","data","comments","setComments","key","push","id","map","c","name","email","comment"],"mappings":";;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,2BAApB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAAA;;AAAA,MACnBC,OADmB,GACPD,KADO,CACnBC,OADmB;;AAAA,gBAEVH,MAAM,yBAAkBG,OAAlB,EAFI;AAAA,MAEnBC,IAFmB,WAEnBA,IAFmB;;AAAA,kBAGKP,QAAQ,EAHb;AAAA,MAGpBQ,QAHoB;AAAA,MAGVC,WAHU;;AAK3BR,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIM,IAAJ,EAAU;AACT,UAAMC,SAAQ,GAAG,EAAjB;;AAEA,WAAK,IAAME,GAAX,IAAkBH,IAAlB,EAAwB;AACvBC,QAAAA,SAAQ,CAACG,IAAT;AACCC,UAAAA,EAAE,EAAEF;AADL,WAEIH,IAAI,CAACG,GAAD,CAFR;AAIA;;AAEDD,MAAAA,WAAW,CAACD,SAAD,CAAX;AACA;AACD,GAbQ,EAaN,CAACD,IAAD,CAbM,CAAT;;AAeA,MAAI,CAACC,QAAL,EAAe;AACd,wBACC,QAAC,QAAD;AAAA,6BACC;AAAG,QAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAED,sBACC;AAAI,IAAA,SAAS,EAAET,OAAO,CAACS,QAAvB;AAAA,cACEA,QAAQ,CAACK,GAAT,CAAa,UAACC,CAAD;AAAA,0BACb;AAAA,8BACSA,CAAC,CAACC,IADX,oBACiB;AAAA;AAAA;AAAA;AAAA,iBADjB,cAEUD,CAAC,CAACE,KAFZ,oBAEmB;AAAA;AAAA;AAAA;AAAA,iBAFnB,gBAGYF,CAAC,CAACG,OAHd;AAAA,SAASH,CAAC,CAACF,EAAX;AAAA;AAAA;AAAA;AAAA,eADa;AAAA,KAAb;AADF;AAAA;AAAA;AAAA;AAAA,UADD;AAWA;;GAvCQR,W;UAESD,M;;;KAFTC,W;AAyCT,eAAeA,WAAf","sourcesContent":["import classes from \"./comment-list.module.css\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport useSWR from \"swr\";\n\nfunction CommentList(props) {\n\tconst { eventId } = props;\n\tconst { data } = useSWR(`/api/comments/${eventId}`);\n\tconst [comments, setComments] = useState();\n\n\tuseEffect(() => {\n\t\tif (data) {\n\t\t\tconst comments = [];\n\n\t\t\tfor (const key in data) {\n\t\t\t\tcomments.push({\n\t\t\t\t\tid: key,\n\t\t\t\t\t...data[key],\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tsetComments(comments);\n\t\t}\n\t}, [data]);\n\n\tif (!comments) {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<p className=\"center\">Loading...</p>\n\t\t\t</Fragment>\n\t\t);\n\t}\t\n\n\treturn (\n\t\t<ul className={classes.comments}>\n\t\t\t{comments.map((c) => (\n\t\t\t\t<li key={c.id}>\n\t\t\t\t\tName:: {c.name} <br/>\n\t\t\t\t\tEmail:: {c.email} <br/>\n\t\t\t\t\tComment:: {c.comment}\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</ul>\n\t);\n}\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}