{"ast":null,"code":"import { getAllSignup } from \"../../../helpers/api-util\";\n\nasync function handler(req, res) {\n  if (req.method == \"POST\") {\n    const email = req.body.email;\n    const signup = {\n      id: Math.floor(new Date().getTime() / 1000),\n      email: email\n    };\n    res.status(201).json({\n      newSignup: signup\n    });\n  } else if (req.method == \"GET\") {\n    const data = await getAllSignup();\n    res.status(201).json({\n      allSignup: data\n    });\n  } else {\n    res.status(200).json({\n      message: \"This works!\"\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth/pages/api/newsletter/index.js"],"names":["getAllSignup","handler","req","res","method","email","body","signup","id","Math","floor","Date","getTime","status","json","newSignup","data","allSignup","message"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,2BAA3B;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA2BC,GAA3B,EAA+B;AAC9B,MAAID,GAAG,CAACE,MAAJ,IAAc,MAAlB,EAA0B;AACzB,UAAMC,KAAK,GAAGH,GAAG,CAACI,IAAJ,CAASD,KAAvB;AAEA,UAAME,MAAM,GAAG;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CADU;AAELP,MAAAA,KAAK,EAAEA;AAFF,KAAf;AAKAF,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBC,MAAAA,SAAS,EAAER;AADS,KAArB;AAGA,GAXD,MAWO,IAAIL,GAAG,CAACE,MAAJ,IAAc,KAAlB,EAAyB;AACzB,UAAMY,IAAI,GAAG,MAAMhB,YAAY,EAA/B;AACNG,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBG,MAAAA,SAAS,EAAED;AADS,KAArB;AAGA,GALM,MAKA;AACNb,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD;;AAED,eAAejB,OAAf","sourcesContent":["import {getAllSignup} from \"../../../helpers/api-util\";\n\nasync function handler(req,res){\n\tif (req.method == \"POST\") {\n\t\tconst email = req.body.email;\n\n\t\tconst signup = {\n\t\t\tid: Math.floor(new Date().getTime() / 1000),\n            email: email\n\t\t};\n\n\t\tres.status(201).json({\n\t\t\tnewSignup: signup,\n\t\t});\n\t} else if (req.method == \"GET\") {\n        const data = await getAllSignup();\n\t\tres.status(201).json({\n\t\t\tallSignup: data,\n\t\t});\n\t} else {\n\t\tres.status(200).json({ message: \"This works!\" });\n\t}\n}\n\nexport default handler;"]},"metadata":{},"sourceType":"module"}