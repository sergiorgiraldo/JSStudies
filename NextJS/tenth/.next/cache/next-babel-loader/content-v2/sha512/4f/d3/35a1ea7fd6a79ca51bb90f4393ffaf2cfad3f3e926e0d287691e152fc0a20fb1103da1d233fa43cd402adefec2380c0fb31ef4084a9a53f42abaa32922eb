{"ast":null,"code":"import { connectDatabase, insertDocument } from \"../../lib/db-util\";\n\nasync function handler(req, res) {\n  let client;\n\n  try {\n    client = await connectDatabase();\n  } catch (error) {\n    res.status(500).json({\n      message: \"Connecting to the database failed! \" + error\n    });\n    return;\n  }\n\n  if (req.method === \"POST\") {\n    const {\n      email,\n      name,\n      message\n    } = req.body;\n\n    if (!email.includes(\"@\") || !name || name.trim() === \"\" || !message || message.trim() === \"\") {\n      res.status(422).json({\n        message: \"Invalid input.\"\n      });\n      client.close();\n      return;\n    }\n\n    const newComment = {\n      email,\n      name,\n      message\n    };\n    let result;\n\n    try {\n      result = await insertDocument(client, \"comments\", newComment);\n      newComment._id = result.insertedId;\n      res.status(201).json({\n        message: \"Added comment.\",\n        comment: newComment\n      });\n    } catch (error) {\n      client.close();\n      res.status(500).json({\n        message: \"Inserting comment failed!\"\n      });\n    } finally {\n      client.close();\n    }\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/tenth/pages/api/contact.js"],"names":["connectDatabase","insertDocument","handler","req","res","client","error","status","json","message","method","email","name","body","includes","trim","close","newComment","result","_id","insertedId","comment"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,cAAzB,QAA8C,mBAA9C;;AAEA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAChC,MAAIC,MAAJ;;AAEA,MAAI;AACHA,IAAAA,MAAM,GAAG,MAAML,eAAe,EAA9B;AACA,GAFD,CAGA,OAAOM,KAAP,EAAc;AACbF,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE,wCAAwCH;AAAnD,KAArB;AACA;AACA;;AAED,MAAIH,GAAG,CAACO,MAAJ,KAAe,MAAnB,EAA2B;AAC1B,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeH,MAAAA;AAAf,QAA2BN,GAAG,CAACU,IAArC;;AAEA,QACC,CAACF,KAAK,CAACG,QAAN,CAAe,GAAf,CAAD,IACA,CAACF,IADD,IAEAA,IAAI,CAACG,IAAL,OAAgB,EAFhB,IAGA,CAACN,OAHD,IAIAA,OAAO,CAACM,IAAR,OAAmB,EALpB,EAME;AACDX,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACAJ,MAAAA,MAAM,CAACW,KAAP;AACA;AACA;;AAED,UAAMC,UAAU,GAAG;AAClBN,MAAAA,KADkB;AAElBC,MAAAA,IAFkB;AAGlBH,MAAAA;AAHkB,KAAnB;AAMA,QAAIS,MAAJ;;AAEA,QAAI;AACHA,MAAAA,MAAM,GAAG,MAAMjB,cAAc,CAACI,MAAD,EAAS,UAAT,EAAqBY,UAArB,CAA7B;AACAA,MAAAA,UAAU,CAACE,GAAX,GAAiBD,MAAM,CAACE,UAAxB;AACAhB,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACpBC,QAAAA,OAAO,EAAE,gBADW;AAEpBY,QAAAA,OAAO,EAAEJ;AAFW,OAArB;AAIA,KAPD,CAQA,OAAOX,KAAP,EAAc;AACbD,MAAAA,MAAM,CAACW,KAAP;AACAZ,MAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA,KAXD,SAYO;AACNJ,MAAAA,MAAM,CAACW,KAAP;AACA;AACD;AAED;;AAED,eAAed,OAAf","sourcesContent":["import {connectDatabase, insertDocument} from \"../../lib/db-util\";\n\nasync function handler(req, res) {\n\tlet client;\n\n\ttry {\n\t\tclient = await connectDatabase();\n\t} \n\tcatch (error) {\n\t\tres.status(500).json({ message: \"Connecting to the database failed! \" + error });\n\t\treturn;\n\t}\n\n\tif (req.method === \"POST\") {\n\t\tconst { email, name, message } = req.body;\n\n\t\tif (\n\t\t\t!email.includes(\"@\") ||\n\t\t\t!name ||\n\t\t\tname.trim() === \"\" ||\n\t\t\t!message ||\n\t\t\tmessage.trim() === \"\"\n\t\t) {\n\t\t\tres.status(422).json({ message: \"Invalid input.\" });\n\t\t\tclient.close();\n\t\t\treturn;\n\t\t}\n\n\t\tconst newComment = {\n\t\t\temail,\n\t\t\tname,\n\t\t\tmessage\n\t\t};\n\n\t\tlet result;\n\n\t\ttry {\n\t\t\tresult = await insertDocument(client, \"comments\", newComment);\n\t\t\tnewComment._id = result.insertedId;\n\t\t\tres.status(201).json({\n\t\t\t\tmessage: \"Added comment.\",\n\t\t\t\tcomment: newComment\n\t\t\t});\n\t\t} \n\t\tcatch (error) {\n\t\t\tclient.close();\n\t\t\tres.status(500).json({ message: \"Inserting comment failed!\" });\n\t\t}\n\t\tfinally{\n\t\t\tclient.close();\n\t\t}\n\t}\n\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}