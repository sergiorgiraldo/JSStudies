{"ast":null,"code":"import _defineProperty from \"/Users/GK47LX/source/JSStudies/NextJS/ninth/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport fs from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\nvar postsDirectory = path.join(process.cwd(), \"posts\");\nexport function getPostsFiles() {\n  return fs.readdirSync(postsDirectory);\n}\nexport function getPostData(postFilename) {\n  var filePath = path.join(postsDirectory, postFilename);\n  var fileContent = fs.readFileSync(filePath, \"utf-8\");\n  var slug = postFilename.replace(/\\.md$/, \"\"); // removes the file extension\n\n  var _matter = matter(fileContent),\n      data = _matter.data,\n      content = _matter.content;\n\n  var postData = _objectSpread(_objectSpread({\n    slug: slug\n  }, data), {}, {\n    content: content\n  });\n\n  return postData;\n}\nexport function getAllPosts() {\n  var postFiles = getPostsFiles();\n  var allPosts = postFiles.map(function (postFilename) {\n    return getPostData(postFilename);\n  });\n  var sortedPosts = allPosts.sort(function (postA, postB) {\n    return postA.date > postB.date ? -1 : 1;\n  });\n  return sortedPosts;\n}\nexport function getFeaturedPosts() {\n  var allPosts = getAllPosts();\n  var featuredPosts = allPosts.filter(function (post) {\n    return post.isFeatured;\n  });\n  return featuredPosts;\n}","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/ninth/lib/posts-util.js"],"names":["fs","path","matter","postsDirectory","join","process","cwd","getPostsFiles","readdirSync","getPostData","postFilename","filePath","fileContent","readFileSync","slug","replace","data","content","postData","getAllPosts","postFiles","allPosts","map","sortedPosts","sort","postA","postB","date","getFeaturedPosts","featuredPosts","filter","post","isFeatured"],"mappings":";;;;;;AAAA,OAAOA,EAAP,MAAe,IAAf;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,cAAc,GAAGF,IAAI,CAACG,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,CAAvB;AAEA,OAAO,SAASC,aAAT,GAAyB;AAC/B,SAAOP,EAAE,CAACQ,WAAH,CAAeL,cAAf,CAAP;AACA;AAED,OAAO,SAASM,WAAT,CAAqBC,YAArB,EAAmC;AACzC,MAAMC,QAAQ,GAAGV,IAAI,CAACG,IAAL,CAAUD,cAAV,EAA0BO,YAA1B,CAAjB;AACA,MAAME,WAAW,GAAGZ,EAAE,CAACa,YAAH,CAAgBF,QAAhB,EAA0B,OAA1B,CAApB;AACA,MAAMG,IAAI,GAAGJ,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8B,EAA9B,CAAb,CAHyC,CAGO;;AAHP,gBAIfb,MAAM,CAACU,WAAD,CAJS;AAAA,MAIjCI,IAJiC,WAIjCA,IAJiC;AAAA,MAI3BC,OAJ2B,WAI3BA,OAJ2B;;AAMzC,MAAMC,QAAQ;AACbJ,IAAAA,IAAI,EAAJA;AADa,KAEVE,IAFU;AAGbC,IAAAA,OAAO,EAAPA;AAHa,IAAd;;AAMA,SAAOC,QAAP;AACA;AAED,OAAO,SAASC,WAAT,GAAuB;AAC7B,MAAMC,SAAS,GAAGb,aAAa,EAA/B;AAEA,MAAMc,QAAQ,GAAGD,SAAS,CAACE,GAAV,CAAc,UAACZ,YAAD,EAAkB;AAChD,WAAOD,WAAW,CAACC,YAAD,CAAlB;AACA,GAFgB,CAAjB;AAIA,MAAMa,WAAW,GAAGF,QAAQ,CAACG,IAAT,CAAc,UAACC,KAAD,EAAQC,KAAR;AAAA,WACjCD,KAAK,CAACE,IAAN,GAAaD,KAAK,CAACC,IAAnB,GAA0B,CAAC,CAA3B,GAA+B,CADE;AAAA,GAAd,CAApB;AAIA,SAAOJ,WAAP;AACA;AAED,OAAO,SAASK,gBAAT,GAA4B;AAClC,MAAMP,QAAQ,GAAGF,WAAW,EAA5B;AAEA,MAAMU,aAAa,GAAGR,QAAQ,CAACS,MAAT,CAAgB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,UAAf;AAAA,GAAhB,CAAtB;AAEA,SAAOH,aAAP;AACA","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport matter from \"gray-matter\";\n\nconst postsDirectory = path.join(process.cwd(), \"posts\");\n\nexport function getPostsFiles() {\n\treturn fs.readdirSync(postsDirectory);\n}\n\nexport function getPostData(postFilename) {\n\tconst filePath = path.join(postsDirectory, postFilename);\n\tconst fileContent = fs.readFileSync(filePath, \"utf-8\");\n\tconst slug = postFilename.replace(/\\.md$/, \"\"); // removes the file extension\n\tconst { data, content } = matter(fileContent);\n\n\tconst postData = {\n\t\tslug,\n\t\t...data,\n\t\tcontent\n\t};\n\n\treturn postData;\n}\n\nexport function getAllPosts() {\n\tconst postFiles = getPostsFiles();\n\n\tconst allPosts = postFiles.map((postFilename) => {\n\t\treturn getPostData(postFilename);\n\t});\n\n\tconst sortedPosts = allPosts.sort((postA, postB) =>\n\t\tpostA.date > postB.date ? -1 : 1\n\t);\n\n\treturn sortedPosts;\n}\n\nexport function getFeaturedPosts() {\n\tconst allPosts = getAllPosts();\n\n\tconst featuredPosts = allPosts.filter((post) => post.isFeatured);\n\n\treturn featuredPosts;\n}\n"]},"metadata":{},"sourceType":"module"}