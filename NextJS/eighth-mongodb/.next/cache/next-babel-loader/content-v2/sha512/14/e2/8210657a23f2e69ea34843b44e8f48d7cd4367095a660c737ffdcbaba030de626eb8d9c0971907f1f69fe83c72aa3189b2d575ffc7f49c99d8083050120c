{"ast":null,"code":"import { connectDatabase, insertDocument, getAllDocuments } from '../../../helpers/db-util';\n\nasync function handler(req, res) {\n  const eventId = req.query.eventId;\n  let client;\n\n  try {\n    client = await connectDatabase();\n  } catch (error) {\n    res.status(500).json({\n      message: 'Connecting to the database failed!'\n    });\n    return;\n  }\n\n  if (req.method === 'POST') {\n    const {\n      email,\n      name,\n      text\n    } = req.body;\n\n    if (!email.includes('@') || !name || name.trim() === '' || !text || text.trim() === '') {\n      res.status(422).json({\n        message: 'Invalid input.'\n      });\n      client.close();\n      return;\n    }\n\n    const newComment = {\n      email,\n      name,\n      text,\n      eventId\n    };\n    let result;\n\n    try {\n      result = await insertDocument(client, 'comments', newComment);\n      newComment._id = result.insertedId;\n      res.status(201).json({\n        message: 'Added comment.',\n        comment: newComment\n      });\n    } catch (error) {\n      res.status(500).json({\n        message: 'Inserting comment failed!'\n      });\n    }\n  }\n\n  if (req.method === 'GET') {\n    try {\n      const documents = await getAllDocuments(client, 'comments', {\n        _id: -1\n      });\n      res.status(200).json({\n        comments: documents\n      });\n    } catch (error) {\n      res.status(500).json({\n        message: 'Getting comments failed.'\n      });\n    }\n  }\n\n  client.close();\n}\n\nexport default handler;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth-alt/pages/api/comments/[eventId].js"],"names":["connectDatabase","insertDocument","getAllDocuments","handler","req","res","eventId","query","client","error","status","json","message","method","email","name","text","body","includes","trim","close","newComment","result","_id","insertedId","comment","documents","comments"],"mappings":"AAAA,SACEA,eADF,EAEEC,cAFF,EAGEC,eAHF,QAIO,0BAJP;;AAMA,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC/B,QAAMC,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAUD,OAA1B;AAEA,MAAIE,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAG,MAAMR,eAAe,EAA9B;AACD,GAFD,CAEE,OAAOS,KAAP,EAAc;AACdJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArB;AACA;AACD;;AAED,MAAIR,GAAG,CAACS,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,QAAwBZ,GAAG,CAACa,IAAlC;;AAEA,QACE,CAACH,KAAK,CAACI,QAAN,CAAe,GAAf,CAAD,IACA,CAACH,IADD,IAEAA,IAAI,CAACI,IAAL,OAAgB,EAFhB,IAGA,CAACH,IAHD,IAIAA,IAAI,CAACG,IAAL,OAAgB,EALlB,EAME;AACAd,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACAJ,MAAAA,MAAM,CAACY,KAAP;AACA;AACD;;AAED,UAAMC,UAAU,GAAG;AACjBP,MAAAA,KADiB;AAEjBC,MAAAA,IAFiB;AAGjBC,MAAAA,IAHiB;AAIjBV,MAAAA;AAJiB,KAAnB;AAOA,QAAIgB,MAAJ;;AAEA,QAAI;AACFA,MAAAA,MAAM,GAAG,MAAMrB,cAAc,CAACO,MAAD,EAAS,UAAT,EAAqBa,UAArB,CAA7B;AACAA,MAAAA,UAAU,CAACE,GAAX,GAAiBD,MAAM,CAACE,UAAxB;AACAnB,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,gBAAX;AAA6Ba,QAAAA,OAAO,EAAEJ;AAAtC,OAArB;AACD,KAJD,CAIE,OAAOZ,KAAP,EAAc;AACdJ,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD;AACF;;AAED,MAAIR,GAAG,CAACS,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAI;AACF,YAAMa,SAAS,GAAG,MAAMxB,eAAe,CAACM,MAAD,EAAS,UAAT,EAAqB;AAAEe,QAAAA,GAAG,EAAE,CAAC;AAAR,OAArB,CAAvC;AACAlB,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEgB,QAAAA,QAAQ,EAAED;AAAZ,OAArB;AACD,KAHD,CAGE,OAAOjB,KAAP,EAAc;AACdJ,MAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACD;AACF;;AAEDJ,EAAAA,MAAM,CAACY,KAAP;AACD;;AAED,eAAejB,OAAf","sourcesContent":["import {\n  connectDatabase,\n  insertDocument,\n  getAllDocuments,\n} from '../../../helpers/db-util';\n\nasync function handler(req, res) {\n  const eventId = req.query.eventId;\n\n  let client;\n\n  try {\n    client = await connectDatabase();\n  } catch (error) {\n    res.status(500).json({ message: 'Connecting to the database failed!' });\n    return;\n  }\n\n  if (req.method === 'POST') {\n    const { email, name, text } = req.body;\n\n    if (\n      !email.includes('@') ||\n      !name ||\n      name.trim() === '' ||\n      !text ||\n      text.trim() === ''\n    ) {\n      res.status(422).json({ message: 'Invalid input.' });\n      client.close();\n      return;\n    }\n\n    const newComment = {\n      email,\n      name,\n      text,\n      eventId,\n    };\n\n    let result;\n\n    try {\n      result = await insertDocument(client, 'comments', newComment);\n      newComment._id = result.insertedId;\n      res.status(201).json({ message: 'Added comment.', comment: newComment });\n    } catch (error) {\n      res.status(500).json({ message: 'Inserting comment failed!' });\n    }\n  }\n\n  if (req.method === 'GET') {\n    try {\n      const documents = await getAllDocuments(client, 'comments', { _id: -1 });\n      res.status(200).json({ comments: documents });\n    } catch (error) {\n      res.status(500).json({ message: 'Getting comments failed.' });\n    }\n  }\n\n  client.close();\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}