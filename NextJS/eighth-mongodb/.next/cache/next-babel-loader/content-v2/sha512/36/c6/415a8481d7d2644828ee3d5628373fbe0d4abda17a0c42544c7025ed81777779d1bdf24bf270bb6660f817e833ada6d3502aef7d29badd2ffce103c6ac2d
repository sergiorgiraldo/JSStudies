{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eighth-mongodb/components/input/comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction Comments(props) {\n  _s();\n\n  var eventId = props.eventId;\n\n  var _useState = useState(false),\n      showComments = _useState[0],\n      setShowComments = _useState[1];\n\n  var _useState2 = useState([]),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(false),\n      commentOK = _useState3[0],\n      setCommentOK = _useState3[1];\n\n  var notificationContext = useContext(NotificationContext);\n  useEffect;\n  useEffect(function () {\n    if (showComments) {\n      notificationContext.showNotification({\n        title: \"Comments\",\n        message: \"Loading ...\",\n        status: \"pending\"\n      });\n      fetch(\"/api/comments/\" + eventId).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        setComments(data.comments);\n        setTimeout(function () {\n          notificationContext.hideNotification(); //dummy delay to see the notification\n        }, \"1000\");\n        ;\n      });\n    }\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments(function (prevStatus) {\n      return !prevStatus;\n    });\n  }\n\n  function addCommentHandler(commentData) {\n    notificationContext.showNotification({\n      title: \"Comments\",\n      message: \"Saving ...\",\n      status: \"pending\"\n    });\n    fetch(\"/api/comments/\" + eventId, {\n      method: \"POST\",\n      body: JSON.stringify(commentData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return response.json().then(function (data) {\n        throw new Error(data.message || \"Something went wrong!\");\n      });\n    }).then(function (data) {\n      toggleCommentsHandler();\n      toggleCommentsHandler();\n      notificationContext.showNotification({\n        title: \"Success!\",\n        message: \"Thanks for interacting!\",\n        status: \"success\"\n      });\n    })[\"catch\"](function (error) {\n      notificationContext.showNotification({\n        title: \"Error!\",\n        message: error.message || \"Something went wrong!\",\n        status: \"error\"\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? \"Hide\" : \"Show\", \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      items: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Comments, \"Wlv1bsU3HOTvvICq26mHi51MXPE=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth-mongodb/components/input/comments.js"],"names":["useEffect","useState","useContext","CommentList","NewComment","classes","NotificationContext","Comments","props","eventId","showComments","setShowComments","comments","setComments","commentOK","setCommentOK","notificationContext","showNotification","title","message","status","fetch","then","response","json","data","setTimeout","hideNotification","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","method","body","JSON","stringify","headers","ok","Error","error"],"mappings":"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","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\n\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction Comments(props) {\n\tconst { eventId } = props;\n\n\tconst [showComments, setShowComments] = useState(false);\n\tconst [comments, setComments] = useState([]);\n\tconst [commentOK, setCommentOK] = useState(false);\n\n\tconst notificationContext = useContext(NotificationContext);\n\n\tuseEffect\n\n\tuseEffect(() => {\n\t\tif (showComments) {\n\t\t\tnotificationContext.showNotification({\n\t\t\t\ttitle: \"Comments\",\n\t\t\t\tmessage: \"Loading ...\",\n\t\t\t\tstatus: \"pending\",\n\t\t\t  });\n\n\t\t\tfetch(\"/api/comments/\" + eventId)\n\t\t\t\t.then((response) => response.json())\n\t\t\t\t.then((data) => {\n\t\t\t\t\tsetComments(data.comments);\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tnotificationContext.hideNotification() //dummy delay to see the notification\n\t\t\t\t\t  }, \"1000\");\n\t\t\t\t\t;\n\t\t\t\t});\n\t\t}\n\t}, [showComments]);\n\n\tfunction toggleCommentsHandler() {\n\t\tsetShowComments((prevStatus) => !prevStatus);\n\t}\n\n\tfunction addCommentHandler(commentData) {\n\t\tnotificationContext.showNotification({\n\t\t\ttitle: \"Comments\",\n\t\t\tmessage: \"Saving ...\",\n\t\t\tstatus: \"pending\",\n\t\t  });\n\t\t  \n\t\tfetch(\"/api/comments/\" + eventId, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(commentData),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t}\n\t\t})\n\t\t.then((response) => {\n\t\t\tif (response.ok) {\n\t\t\t  return response.json();\n\t\t\t}\n\t\n\t\t\treturn response.json().then((data) => {\n\t\t\t  throw new Error(data.message || \"Something went wrong!\");\n\t\t\t});\n\t\t  })\n\t\t  .then((data) => {\n\t\t\ttoggleCommentsHandler();\n\t\t\ttoggleCommentsHandler();\n\t\t\tnotificationContext.showNotification({\n\t\t\t  title: \"Success!\",\n\t\t\t  message: \"Thanks for interacting!\",\n\t\t\t  status: \"success\",\n\t\t\t});\n\t\t  })\n\t\t  .catch((error) => {\n\t\t\tnotificationContext.showNotification({\n\t\t\t  title: \"Error!\",\n\t\t\t  message: error.message || \"Something went wrong!\",\n\t\t\t  status: \"error\",\n\t\t\t});\n\t\t  });\n\t\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<button onClick={toggleCommentsHandler}>\n\t\t\t\t{showComments ? \"Hide\" : \"Show\"} Comments\n\t\t\t</button>\n\t\t\t{showComments && <NewComment onAddComment={addCommentHandler} />}\n\t\t\t{showComments && <CommentList items={comments} />}\n\t\t</section>\n\t);\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}