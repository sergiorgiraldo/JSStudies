{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eighth-mongodb/components/input/comments.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction Comments(props) {\n  _s();\n\n  function getComments(showNotification) {\n    if (showNotification) {\n      notificationContext.showNotification({\n        title: \"Comments\",\n        message: \"Loading ...\",\n        status: \"pending\"\n      });\n    }\n\n    fetch(\"/api/comments/\" + eventId).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setComments(data.comments);\n      if (showNotification) notificationContext.hideNotification();\n    });\n  }\n\n  var eventId = props.eventId;\n\n  var _useState = useState(false),\n      showComments = _useState[0],\n      setShowComments = _useState[1];\n\n  var _useState2 = useState([]),\n      comments = _useState2[0],\n      setComments = _useState2[1];\n\n  var _useState3 = useState(false),\n      commentOK = _useState3[0],\n      setCommentOK = _useState3[1];\n\n  var notificationContext = useContext(NotificationContext);\n  useEffect(function () {\n    getComments(false);\n  }, [commentOK]);\n  useEffect(function () {\n    if (showComments) {\n      getComments(true);\n    }\n  }, [showComments]);\n\n  function toggleCommentsHandler() {\n    setShowComments(function (prevStatus) {\n      return !prevStatus;\n    });\n  }\n\n  function addCommentHandler(commentData) {\n    notificationContext.showNotification({\n      title: \"Comments\",\n      message: \"Saving ...\",\n      status: \"pending\"\n    });\n    fetch(\"/api/comments/\" + eventId, {\n      method: \"POST\",\n      body: JSON.stringify(commentData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return response.json().then(function (data) {\n        throw new Error(data.message || \"Something went wrong!\");\n      });\n    }).then(function (data) {\n      toggleCommentsHandler();\n      toggleCommentsHandler();\n      notificationContext.showNotification({\n        title: \"Success!\",\n        message: \"Thanks for interacting!\",\n        status: \"success\"\n      });\n    })[\"catch\"](function (error) {\n      notificationContext.showNotification({\n        title: \"Error!\",\n        message: error.message || \"Something went wrong!\",\n        status: \"error\"\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? \"Hide\" : \"Show\", \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      items: comments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Comments, \"Z+no2gVqFSJ56vPyoxorVV8R9U4=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth-mongodb/components/input/comments.js"],"names":["useEffect","useState","useContext","CommentList","NewComment","classes","NotificationContext","Comments","props","getComments","showNotification","notificationContext","title","message","status","fetch","eventId","then","response","json","data","setComments","comments","hideNotification","showComments","setShowComments","commentOK","setCommentOK","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","method","body","JSON","stringify","headers","ok","Error","error"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAExB,WAASC,WAAT,CAAqBC,gBAArB,EAAsC;AACrC,QAAIA,gBAAJ,EAAqB;AACrBC,MAAAA,mBAAmB,CAACD,gBAApB,CAAqC;AACpCE,QAAAA,KAAK,EAAE,UAD6B;AAEpCC,QAAAA,OAAO,EAAE,aAF2B;AAGpCC,QAAAA,MAAM,EAAE;AAH4B,OAArC;AAKC;;AAEDC,IAAAA,KAAK,CAAC,mBAAmBC,OAApB,CAAL,CACEC,IADF,CACO,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADP,EAEEF,IAFF,CAEO,UAACG,IAAD,EAAU;AACfC,MAAAA,WAAW,CAACD,IAAI,CAACE,QAAN,CAAX;AACA,UAAIZ,gBAAJ,EAAsBC,mBAAmB,CAACY,gBAApB;AACtB,KALF;AAOA;;AAlBuB,MAmBhBP,OAnBgB,GAmBJR,KAnBI,CAmBhBQ,OAnBgB;;AAAA,kBAqBgBf,QAAQ,CAAC,KAAD,CArBxB;AAAA,MAqBjBuB,YArBiB;AAAA,MAqBHC,eArBG;;AAAA,mBAsBQxB,QAAQ,CAAC,EAAD,CAtBhB;AAAA,MAsBjBqB,QAtBiB;AAAA,MAsBPD,WAtBO;;AAAA,mBAuBUpB,QAAQ,CAAC,KAAD,CAvBlB;AAAA,MAuBjByB,SAvBiB;AAAA,MAuBNC,YAvBM;;AAyBxB,MAAMhB,mBAAmB,GAAGT,UAAU,CAACI,mBAAD,CAAtC;AAEAN,EAAAA,SAAS,CAAC,YAAK;AACdS,IAAAA,WAAW,CAAC,KAAD,CAAX;AACA,GAFQ,EAGT,CAACiB,SAAD,CAHS,CAAT;AAKA1B,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIwB,YAAJ,EAAkB;AACjBf,MAAAA,WAAW,CAAC,IAAD,CAAX;AACA;AACD,GAJQ,EAIN,CAACe,YAAD,CAJM,CAAT;;AAMA,WAASI,qBAAT,GAAiC;AAChCH,IAAAA,eAAe,CAAC,UAACI,UAAD;AAAA,aAAgB,CAACA,UAAjB;AAAA,KAAD,CAAf;AACA;;AAED,WAASC,iBAAT,CAA2BC,WAA3B,EAAwC;AACvCpB,IAAAA,mBAAmB,CAACD,gBAApB,CAAqC;AACpCE,MAAAA,KAAK,EAAE,UAD6B;AAEpCC,MAAAA,OAAO,EAAE,YAF2B;AAGpCC,MAAAA,MAAM,EAAE;AAH4B,KAArC;AAMAC,IAAAA,KAAK,CAAC,mBAAmBC,OAApB,EAA6B;AACjCgB,MAAAA,MAAM,EAAE,MADyB;AAEjCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAF2B;AAGjCK,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AAHwB,KAA7B,CAAL,CAOCnB,IAPD,CAOM,UAACC,QAAD,EAAc;AACnB,UAAIA,QAAQ,CAACmB,EAAb,EAAiB;AACf,eAAOnB,QAAQ,CAACC,IAAT,EAAP;AACD;;AAED,aAAOD,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqB,UAACG,IAAD,EAAU;AACpC,cAAM,IAAIkB,KAAJ,CAAUlB,IAAI,CAACP,OAAL,IAAgB,uBAA1B,CAAN;AACD,OAFM,CAAP;AAGE,KAfH,EAgBGI,IAhBH,CAgBQ,UAACG,IAAD,EAAU;AACjBQ,MAAAA,qBAAqB;AACrBA,MAAAA,qBAAqB;AACrBjB,MAAAA,mBAAmB,CAACD,gBAApB,CAAqC;AACnCE,QAAAA,KAAK,EAAE,UAD4B;AAEnCC,QAAAA,OAAO,EAAE,yBAF0B;AAGnCC,QAAAA,MAAM,EAAE;AAH2B,OAArC;AAKE,KAxBH,WAyBS,UAACyB,KAAD,EAAW;AACnB5B,MAAAA,mBAAmB,CAACD,gBAApB,CAAqC;AACnCE,QAAAA,KAAK,EAAE,QAD4B;AAEnCC,QAAAA,OAAO,EAAE0B,KAAK,CAAC1B,OAAN,IAAiB,uBAFS;AAGnCC,QAAAA,MAAM,EAAE;AAH2B,OAArC;AAKE,KA/BH;AAgCC;;AAEF,sBACC;AAAS,IAAA,SAAS,EAAET,OAAO,CAACiB,QAA5B;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEM,qBAAjB;AAAA,iBACEJ,YAAY,GAAG,MAAH,GAAY,MAD1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAIEA,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEM;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJlB,EAKEN,YAAY,iBAAI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YALlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GA5FQf,Q;;KAAAA,Q;AA8FT,eAAeA,QAAf","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\n\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction Comments(props) {\n\n\tfunction getComments(showNotification){\n\t\tif (showNotification){\n\t\tnotificationContext.showNotification({\n\t\t\ttitle: \"Comments\",\n\t\t\tmessage: \"Loading ...\",\n\t\t\tstatus: \"pending\",\n\t\t  });\n\t\t}\n\n\t\tfetch(\"/api/comments/\" + eventId)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => {\n\t\t\t\tsetComments(data.comments);\n\t\t\t\tif (showNotification) notificationContext.hideNotification();\t\n\t\t\t});\n\n\t}\n\tconst { eventId } = props;\n\n\tconst [showComments, setShowComments] = useState(false);\n\tconst [comments, setComments] = useState([]);\n\tconst [commentOK, setCommentOK] = useState(false);\n\n\tconst notificationContext = useContext(NotificationContext);\n\n\tuseEffect(()=> {\n\t\tgetComments(false)\n\t},\n\t[commentOK]);\n\n\tuseEffect(() => {\n\t\tif (showComments) {\n\t\t\tgetComments(true);\n\t\t}\n\t}, [showComments]);\n\n\tfunction toggleCommentsHandler() {\n\t\tsetShowComments((prevStatus) => !prevStatus);\n\t}\n\n\tfunction addCommentHandler(commentData) {\n\t\tnotificationContext.showNotification({\n\t\t\ttitle: \"Comments\",\n\t\t\tmessage: \"Saving ...\",\n\t\t\tstatus: \"pending\",\n\t\t  });\n\t\t  \n\t\tfetch(\"/api/comments/\" + eventId, {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(commentData),\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t}\n\t\t})\n\t\t.then((response) => {\n\t\t\tif (response.ok) {\n\t\t\t  return response.json();\n\t\t\t}\n\t\n\t\t\treturn response.json().then((data) => {\n\t\t\t  throw new Error(data.message || \"Something went wrong!\");\n\t\t\t});\n\t\t  })\n\t\t  .then((data) => {\n\t\t\ttoggleCommentsHandler();\n\t\t\ttoggleCommentsHandler();\n\t\t\tnotificationContext.showNotification({\n\t\t\t  title: \"Success!\",\n\t\t\t  message: \"Thanks for interacting!\",\n\t\t\t  status: \"success\",\n\t\t\t});\n\t\t  })\n\t\t  .catch((error) => {\n\t\t\tnotificationContext.showNotification({\n\t\t\t  title: \"Error!\",\n\t\t\t  message: error.message || \"Something went wrong!\",\n\t\t\t  status: \"error\",\n\t\t\t});\n\t\t  });\n\t\t}\n\n\treturn (\n\t\t<section className={classes.comments}>\n\t\t\t<button onClick={toggleCommentsHandler}>\n\t\t\t\t{showComments ? \"Hide\" : \"Show\"} Comments\n\t\t\t</button>\n\t\t\t{showComments && <NewComment onAddComment={addCommentHandler} />}\n\t\t\t{showComments && <CommentList items={comments} />}\n\t\t</section>\n\t);\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}