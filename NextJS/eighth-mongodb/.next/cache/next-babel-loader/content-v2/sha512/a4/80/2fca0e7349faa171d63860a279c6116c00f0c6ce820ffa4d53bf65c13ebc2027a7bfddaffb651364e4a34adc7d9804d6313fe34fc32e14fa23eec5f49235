{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/GK47LX/source/JSStudies/NextJS/eighth-alt/pages/events/[eventId].js\";\nimport { Fragment } from 'react';\nimport Head from 'next/head';\nimport { getEventById, getFeaturedEvents } from '../../helpers/api-util';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\nimport ErrorAlert from '../../components/ui/error-alert';\nimport Comments from '../../components/input/comments';\n\nfunction EventDetailPage(props) {\n  const event = props.selectedEvent;\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {\n      eventId: event.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticProps(context) {\n  const eventId = context.params.eventId;\n  const event = await getEventById(eventId);\n  return {\n    props: {\n      selectedEvent: event\n    },\n    revalidate: 30\n  };\n}\nexport async function getStaticPaths() {\n  const events = await getFeaturedEvents();\n  const paths = events.map(event => ({\n    params: {\n      eventId: event.id\n    }\n  }));\n  return {\n    paths: paths,\n    fallback: 'blocking'\n  };\n}\nexport default EventDetailPage;","map":{"version":3,"sources":["/Users/GK47LX/source/JSStudies/NextJS/eighth-alt/pages/events/[eventId].js"],"names":["Fragment","Head","getEventById","getFeaturedEvents","EventSummary","EventLogistics","EventContent","ErrorAlert","Comments","EventDetailPage","props","event","selectedEvent","title","description","date","location","image","id","getStaticProps","context","eventId","params","revalidate","getStaticPaths","events","paths","map","fallback"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,wBAAhD;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,QAAMC,KAAK,GAAGD,KAAK,CAACE,aAApB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,kBAAQA,KAAK,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAEF,KAAK,CAACG;AAFjB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEH,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,YARF,eASE,QAAC,cAAD;AACE,MAAA,IAAI,EAAEF,KAAK,CAACI,IADd;AAEE,MAAA,OAAO,EAAEJ,KAAK,CAACK,QAFjB;AAGE,MAAA,KAAK,EAAEL,KAAK,CAACM,KAHf;AAIE,MAAA,QAAQ,EAAEN,KAAK,CAACE;AAJlB;AAAA;AAAA;AAAA;AAAA,YATF,eAeE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAIF,KAAK,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAfF,eAkBE,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEH,KAAK,CAACO;AAAzB;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,OAAO,GAAGD,OAAO,CAACE,MAAR,CAAeD,OAA/B;AAEA,QAAMV,KAAK,GAAG,MAAMT,YAAY,CAACmB,OAAD,CAAhC;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLE,MAAAA,aAAa,EAAED;AADV,KADF;AAILY,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMtB,iBAAiB,EAAtC;AAEA,QAAMuB,KAAK,GAAGD,MAAM,CAACE,GAAP,CAAWhB,KAAK,KAAK;AAAEW,IAAAA,MAAM,EAAE;AAAED,MAAAA,OAAO,EAAEV,KAAK,CAACO;AAAjB;AAAV,GAAL,CAAhB,CAAd;AAEA,SAAO;AACLQ,IAAAA,KAAK,EAAEA,KADF;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID;AAED,eAAenB,eAAf","sourcesContent":["import { Fragment } from 'react';\nimport Head from 'next/head';\n\nimport { getEventById, getFeaturedEvents } from '../../helpers/api-util';\nimport EventSummary from '../../components/event-detail/event-summary';\nimport EventLogistics from '../../components/event-detail/event-logistics';\nimport EventContent from '../../components/event-detail/event-content';\nimport ErrorAlert from '../../components/ui/error-alert';\nimport Comments from '../../components/input/comments';\n\nfunction EventDetailPage(props) {\n  const event = props.selectedEvent;\n\n  if (!event) {\n    return (\n      <div className=\"center\">\n        <p>Loading...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <Head>\n        <title>{event.title}</title>\n        <meta\n          name='description'\n          content={event.description}\n        />\n      </Head>\n      <EventSummary title={event.title} />\n      <EventLogistics\n        date={event.date}\n        address={event.location}\n        image={event.image}\n        imageAlt={event.title}\n      />\n      <EventContent>\n        <p>{event.description}</p>\n      </EventContent>\n      <Comments eventId={event.id} />\n    </Fragment>\n  );\n}\n\nexport async function getStaticProps(context) {\n  const eventId = context.params.eventId;\n\n  const event = await getEventById(eventId);\n\n  return {\n    props: {\n      selectedEvent: event\n    },\n    revalidate: 30\n  };\n}\n\nexport async function getStaticPaths() {\n  const events = await getFeaturedEvents();\n\n  const paths = events.map(event => ({ params: { eventId: event.id } }));\n\n  return {\n    paths: paths,\n    fallback: 'blocking'\n  };\n}\n\nexport default EventDetailPage;\n"]},"metadata":{},"sourceType":"module"}